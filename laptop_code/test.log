
l
ls
ls                              curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
ls                              curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >l
ls                              curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >c
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ca
_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat
term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat 
erm.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat t
m.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat ter
.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term
log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_
og  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_s
g  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_st
  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_sta
 term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_stat
term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_state
erm_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_state.
rm_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_state.c
while(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>
hile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>c
ile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>ca
le(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat
e(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat 
(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat t
true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat te
rue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat ter
ue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term
e) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_
) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_s
 {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_st
{     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_sta
     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_stat
    read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state
   read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.
  read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.c
while(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>
hile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>c
ile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>ca
le(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat
e(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat 
(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat t
true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat te
rue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat ter
ue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term
e) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_
) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_s
 {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_st
{     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_sta
     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_stat
    read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state
   read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.
  read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.c
while(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>
hile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>l
ile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>ls
F_LEN);          }                               // do stuff :3                                  return 0;     }>ls                            curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
_LEN);          }                               // do stuff :3                                  return 0;     }>ls                            curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >l
LEN);          }                               // do stuff :3                                  return 0;     }>ls                            curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >l
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >l
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls
m_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >l
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >l
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >l
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >c
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ca
_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat
term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat 
erm.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat t
rm.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat te
m.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat ter
.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term
log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_
og  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_s
g  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_st
  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_sta
 term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_stat
term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_state
erm_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_state.
rm_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >cat term_state.c
while(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>
hile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>c
ile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>ca
le(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat
e(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat 
(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat t
true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat te
rue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat ter
ue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term
e) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_
) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_s
 {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_st
{     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_sta
     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_stat
    read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state
   read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.
  read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.c
while(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>
hile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>c
ile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>ca
le(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat
e(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat 
(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat t
true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat te
rue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat ter
ue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term
e) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_
) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_s
 {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_st
{     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_sta
    read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state
   read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.
  read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.c
while(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>
hile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>c
ile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>ca
le(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat
e(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat 
(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat t
true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat te
rue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat ter
ue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term
e) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_
) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_s
 {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_st
{     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_sta
     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_stat
    read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state
   read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.
  read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.c
while(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>
hile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>c
ile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>ca
le(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat
e(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat 
(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat t
true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat te
rue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat ter
ue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term
e) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_
) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_s
 {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_st
{     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_sta
     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_stat
    read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state
   read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.
  read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.c
while(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>
hile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>c
ile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>ca
le(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat
e(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat 
(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat t
true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat te
rue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat ter
ue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term
e) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_
) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_s
 {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_st
{     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_sta
     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_stat
    read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state
   read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.
  read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.c
while(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>
hile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>c
ile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>ca
le(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat
e(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat 
(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat t
true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat te
rue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat ter
ue) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term
e) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_
) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_s
 {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_st
     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_stat
    read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state
   read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.
  read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>cat term_state.c
while(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>
hile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>l
ile(true) {     read(term_fd,read_buf,READ_BUF_LEN);            lseek(term_fd,-256,SEEK_END);                   read(term_fd,read_buf,READ_BUF_LEN);          }                               // do stuff :3                                  return 0;     }>ls
F_LEN);          }                               // do stuff :3                                  return 0;     }>ls                            curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
_LEN);          }                               // do stuff :3                                  return 0;     }>ls                            curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >l
LEN);          }                               // do stuff :3                                  return 0;     }>ls                            curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >l
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >l
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >l
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >l
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >t
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >te
_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >tet
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >te
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >t
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >t
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >te
_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >tes
term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >test
erm.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testi
rm.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testin
m.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testing
.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testing 
m.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testing
rm.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testin
erm.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testi
term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >test
_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >tes
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >te
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >t
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >t
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >te
_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >tes
term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >test
erm.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testi
rm.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testic
.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testicle
m.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testicl
rm.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testic
erm.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >testi
term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >test
_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >tes
r_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >te
rr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >t
urr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >ls                             curr_term.log  term_state.c  term_state.py  test_arduino_output.py  test.log  tmux_commands.sh	tmux_restore.sh  >
